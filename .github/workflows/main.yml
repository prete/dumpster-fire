name: Build scRNAseq-course

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:

  download-cache:
    name: Retrieve bookdown cache from S3
    runs-on: ubuntu-latest
    env:
      AWS_ACCESS_KEY_ID: ${{secrets.AWS_ACCESS_KEY_ID}}
      AWS_SECRET_ACCESS_KEY: ${{secrets.AWS_SECRET_ACCESS_KEY}}
    steps:
      - name: Download cache
        run:  aws s3 sync s3://mp33/course/_bookdown_files/ . --endpoint-url https://cog.sanger.ac.uk
      - uses: actions/upload-artifact@v2
        with:
          name: bookdown-cache
          path: ./

  download-data:
    name: Retrieve data from S3
    runs-on: ubuntu-latest
    env:
      AWS_ACCESS_KEY_ID: ${{secrets.AWS_ACCESS_KEY_ID}}
      AWS_SECRET_ACCESS_KEY: ${{secrets.AWS_SECRET_ACCESS_KEY}}
    steps:
      - name: Download course data
        run: aws s3 sync s3://mp33/course/data/ . --endpoint-url https://cog.sanger.ac.uk
      - uses: actions/upload-artifact@v2
        with:
          name: course-data
          path: ./
          if-no-files-found: error 

  render-course:
    name: Render bookdown Rmd files for site generation
    runs-on: ubuntu-latest
    needs: [download-cache, download-data]
    container:
      image: jupyter/minimal-notebook:latest
      options: --user root
    steps:
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v2
      - run: ls -lha 

  upload-course:
    name: Upload rendered bookdown files to S3
    runs-on: ubuntu-latest
    needs: [render-course]
    steps:
      - uses: actions/download-artifact@v2
      - run: ls -lha .

  upload-cache:
    name: Upload bookdown cache to S3
    runs-on: ubuntu-latest
    needs: [render-course]
    steps:
      - uses: actions/download-artifact@v2
      - run: ls -lha .
